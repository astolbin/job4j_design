Для анализа производится создание обьектов ru.job4j.tracker.Item в бесконечном цикле (с паузой в 2ms)
Используется Serial GC
Ограничение памяти 6MB



С помощью jmap --heap видим параметры хипа (емкости блоков поколений)
а так же сколько памяти используется в блоках поколений

>jhsdb jmap --heap --pid 9936
Attaching to process ID 9936, please wait...
Debugger attached successfully.
Server compiler detected.
JVM version is 15.0.2+7-27

using thread-local object allocation.
Mark Sweep Compact GC

Heap Configuration:
   MinHeapFreeRatio         = 40
   MaxHeapFreeRatio         = 70
   MaxHeapSize              = 6291456 (6.0MB)
   NewSize                  = 2097152 (2.0MB)
   MaxNewSize               = 2097152 (2.0MB)
   OldSize                  = 4194304 (4.0MB)
   NewRatio                 = 2
   SurvivorRatio            = 8
   MetaspaceSize            = 21807104 (20.796875MB)
   CompressedClassSpaceSize = 1073741824 (1024.0MB)
   MaxMetaspaceSize         = 17592186044415 MB
   G1HeapRegionSize         = 0 (0.0MB)

Heap Usage:
New Generation (Eden + 1 Survivor Space):
   capacity = 1900544 (1.8125MB)
   used     = 1624320 (1.549072265625MB)
   free     = 276224 (0.263427734375MB)
   85.46605603448276% used
Eden Space:
   capacity = 1703936 (1.625MB)
   used     = 1427712 (1.361572265625MB)
   free     = 276224 (0.263427734375MB)
   83.7890625% used
From Space:
   capacity = 196608 (0.1875MB)
   used     = 196608 (0.1875MB)
   free     = 0 (0.0MB)
   100.0% used
To Space:
   capacity = 196608 (0.1875MB)
   used     = 0 (0.0MB)
   free     = 196608 (0.1875MB)
   0.0% used
tenured generation:
   capacity = 4194304 (4.0MB)
   used     = 697904 (0.6655731201171875MB)
   free     = 3496400 (3.3344268798828125MB)
   16.639328002929688% used




С помощью jmap --histo видим количество обьектов и потребляемую ими память:

>jhsdb jmap --histo --pid 9936
Attaching to process ID 9936, please wait...
Debugger attached successfully.
Server compiler detected.
JVM version is 15.0.2+7-27
Iterating over heap. This may take a while...
Object Histogram:

num       #instances    #bytes  Class description
--------------------------------------------------------------------------
1:              24160   579840  ru.job4j.tracker.Item
2:              8917    571888  byte[]
3:              21410   513840  java.util.concurrent.atomic.AtomicLong
4:              1277    461088  java.lang.Object[]
5:              8411    201864  java.lang.String
...



С помощью jstat -gcutil в реальном времени наблюдаем работу сборщика мусора
(перенос из молодого в старое поколение, сменяющиеся Survivor space, количество сборок мусора)
так же можно наблюдать момент падения программы, когда и молодое и старое поколения полностью заполнены

C:\Users\astol>jstat -gcutil 9936 6s 200
  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT    CGC    CGCT     GCT
  0,00 100,00  21,61  54,88  27,06  25,20      3    0,009     0    0,000     -        -    0,009
  0,00 100,00  28,59  54,88  27,06  25,20      3    0,009     0    0,000     -        -    0,009
  0,00 100,00  37,31  54,88  27,06  25,20      3    0,009     0    0,000     -        -    0,009
  0,00 100,00  44,29  54,88  27,06  25,20      3    0,009     0    0,000     -        -    0,009
  0,00 100,00  51,27  54,88  27,06  25,20      3    0,009     0    0,000     -        -    0,009
  0,00 100,00  58,25  54,88  27,06  25,20      3    0,009     0    0,000     -        -    0,009
  0,00 100,00  65,24  54,88  27,06  25,20      3    0,009     0    0,000     -        -    0,009
  0,00 100,00  88,92  54,88  27,06  25,20      3    0,009     0    0,000     -        -    0,009
  0,00 100,00  95,90  54,88  27,06  25,20      3    0,009     0    0,000     -        -    0,009
100,00   0,00   3,65  73,02  27,06  25,20      4    0,012     0    0,000     -        -    0,012
100,00   0,00  10,95  73,02  27,06  25,20      4    0,012     0    0,000     -        -    0,012
100,00   0,00  18,25  73,02  27,06  25,20      4    0,012     0    0,000     -        -    0,012
100,00   0,00  25,55  73,02  27,06  25,20      4    0,012     0    0,000     -        -    0,012
100,00   0,00  32,85  73,02  27,06  25,20      4    0,012     0    0,000     -        -    0,012
100,00   0,00  40,15  73,02  27,06  25,20      4    0,012     0    0,000     -        -    0,012
100,00   0,00  47,45  73,02  27,06  25,20      4    0,012     0    0,000     -        -    0,012
100,00   0,00  79,80  73,02  27,06  25,20      4    0,012     0    0,000     -        -    0,012
100,00   0,00  87,10  73,02  27,06  25,20      4    0,012     0    0,000     -        -    0,012
100,00   0,00  94,40  73,02  27,06  25,20      4    0,012     0    0,000     -        -    0,012
  0,00 100,00   1,88  98,13  27,26  25,20      5    0,015     0    0,000     -        -    0,015
  0,00 100,00   7,51  98,13  27,26  25,20      5    0,015     0    0,000     -        -    0,015
  0,00 100,00  15,01  98,13  27,26  25,20      5    0,015     0    0,000     -        -    0,015
  0,00 100,00  22,51  98,13  27,26  25,20      5    0,015     0    0,000     -        -    0,015
  0,00 100,00  30,02  98,13  27,26  25,20      5    0,015     0    0,000     -        -    0,015
  0,00 100,00  37,52  98,13  27,26  25,20      5    0,015     0    0,000     -        -    0,015
  0,00 100,00  45,03  98,13  27,26  25,20      5    0,015     0    0,000     -        -    0,015
  0,00 100,00  52,53  98,13  27,26  25,20      5    0,015     0    0,000     -        -    0,015
  0,00 100,00  58,16  98,13  27,26  25,20      5    0,015     0    0,000     -        -    0,015
  0,00 100,00  65,67  98,13  27,26  25,20      5    0,015     0    0,000     -        -    0,015
  0,00 100,00  73,17  98,13  27,26  25,20      5    0,015     0    0,000     -        -    0,015
  0,00   0,00  68,40 100,00  27,22  25,10      6    0,015     1    0,013     -        -    0,028
  0,00   0,00  75,96 100,00  27,22  25,10      6    0,015     1    0,013     -        -    0,028
  0,00   0,00  83,53 100,00  27,22  25,10      6    0,015     1    0,013     -        -    0,028
  0,00   0,00  91,10 100,00  27,22  25,10      6    0,015     1    0,013     -        -    0,028
  0,00   0,00  96,77 100,00  27,22  25,10      6    0,015     1    0,013     -        -    0,028
  0,00  31,34 100,00 100,00  27,22  25,10      6    0,015     1    0,013     -        -    0,028
  0,00  90,59 100,00 100,00  27,22  25,10      6    0,015     1    0,013     -        -    0,028
  0,00   0,00  70,88 100,00  27,22  25,10      6    0,015     2    0,022     -        -    0,037
  0,00   0,00  78,10 100,00  27,22  25,10      6    0,015     2    0,022     -        -    0,037
  0,00   0,00  85,31 100,00  27,22  25,10      6    0,015     2    0,022     -        -    0,037
  0,00   0,00  92,53 100,00  27,22  25,10      6    0,015     2    0,022     -        -    0,037
  0,00   0,00  99,74 100,00  27,22  25,10      6    0,015     2    0,022     -        -    0,037
  0,00  47,84 100,00 100,00  27,22  25,10      6    0,015     2    0,022     -        -    0,037
  0,00   0,00  88,74 100,00  27,22  25,10      6    0,015     3    0,038     -        -    0,053
  0,00   0,00  96,26 100,00  27,22  25,10      6    0,015     3    0,038     -        -    0,053
  0,00  19,70 100,00 100,00  27,22  25,10      6    0,015     3    0,038     -        -    0,053
  0,00  80,00 100,00 100,00  27,22  25,10      6    0,015     3    0,038     -        -    0,053
  0,00   2,36 100,00  98,63  27,22  25,10      6    0,015     4    0,055     -        -    0,070
  0,00  64,20 100,00  98,63  27,22  25,10      6    0,015     4    0,055     -        -    0,070
  0,00 100,00 100,00  99,84  27,22  25,10      6    0,015     4    0,055     -        -    0,070
  0,00  84,92 100,00 100,00  27,22  25,10      6    0,015     5    0,070     -        -    0,085
  0,00  93,16 100,00 100,00  27,22  25,10      6    0,015     7    0,096     -        -    0,111



В графической утилите jconsole, на вкладке Memory можно наблюдать примерно те же показания, только в виде графиков
Ну и так же выводится информация о распределении памяти, количество сборок мусора